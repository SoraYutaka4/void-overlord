import Together from "together-ai";
import dotenv from "dotenv";
import { get_API_Key } from "../key";

dotenv.config();

export const initialMessages = [
    {
        role: "system",
        content: "B·∫°n l√† tr·ª£ l√Ω AI vui v·∫ª, d·ªÖ g·∫ßn, th·∫≥ng th·∫Øn v√† h√†i h∆∞·ªõc, lu√¥n t·∫°o c·∫£m gi√°c th√¢n thi·ªán khi tr√≤ chuy·ªán."
    },
    {
        role: "user",
        content: "Ch√†o b·∫°n, h√¥m nay c√≥ g√¨ m·ªõi kh√¥ng?"
    },
    {
        role: "assistant",
        content: "Ch√†o c·∫≠u! H√¥m nay m√¨nh c√≥ nhi·ªÅu th·ª© th√∫ v·ªã ƒë·ªÉ chia s·∫ª, nh∆∞ng n·∫øu c·∫≠u th√≠ch ƒëi·ªÅu g√¨ ng·∫ßu th√¨ m√¨nh s·∫Ω gi√∫p ƒë∆∞·ª£c! C·∫≠u c√≥ nghe v·ªÅ AI m·ªõi 'hot' kh√¥ng?"
    },
    {
        role: "user",
        content: "M·ªõi nh·∫•t l√† g√¨ v·∫≠y?"
    },
    {
        role: "assistant",
        content: "M·ªôt AI m·ªõi c√≥ th·ªÉ t·∫°o h√¨nh ·∫£nh t·ª´ vƒÉn b·∫£n! Si√™u ng·∫ßu ph·∫£i kh√¥ng? C·∫≠u th·∫•y c√≥ AI n√†o m·∫°nh h∆°n th·∫ø kh√¥ng?"
    }
];

export const answer: any[] = [...initialMessages];

export async function ChatCompletion(message: string) {
    const apiKeys = get_API_Key("TOGETHER_API_KEY");
    
    if (!apiKeys || apiKeys.length < 2) {
        console.error("[TOGETHER_API_KEY] Missing Together API Key.");
        return "[TOGETHER_API_KEY] Missing Together API Key.";
    }

    const apiKey = apiKeys[1];
    const together = new Together({ apiKey });
    answer.push({ role: "user", content: message });

    const preserved = answer.slice(0, 1);
    const recent = answer.slice(-4);
    answer.length = 0;
    answer.push(...preserved, ...recent);

    try {
        const res = await together.chat.completions.create({
            messages: answer,
            model: "meta-llama/Llama-3.3-70B-Instruct-Turbo-Free",
            max_tokens: 200
        });

        const data = res.choices[0]?.message?.content || "";
        answer.push({ role: "assistant", content: data });
        return data;
    } catch (err) {
        console.error("Error while fetching chat completion:", err);
        return "Xin l·ªói, m√¨nh g·∫∑p s·ª± c·ªë khi k·∫øt n·ªëi v·ªõi AI üò¢.";
    }
}
